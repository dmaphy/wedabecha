 - Eclipse zeigt noch viele Warnungen, die behoben werden müssen.
 - org.wedabecha.ui.MenuBar.java
		Hier ist ein Denkfehler beim generieren des Menus für die Kurve
		(curveMenu). Vor beheben dieses Fehlers macht es evtl. Sinn die Klasse
		Curve neu zu schreiben (übersichtlichere Gestaltung, keine Warnungen,
		alle Dokumentationskommentare). Ebenfalls denke ich über eine andere Art
		der internen Verwaltung der Kurven nach. (zur Zeit das Array curve[] in
		wedabecha.java).
		Mit einem Blick auf die Zukunft sollten die Kurven auf jeden Fall
		serialisiert abgespeichert werden können. (Speichern-Funktion des Programms)
 - Für die Toolbar muss eine Alternative gefunden werden, um die Bilder mit im
   src-Verzeichnis zu speichern, so dass sie automatisch beim Build-Vorgang mit
   in das bin-Verzeichnis übernommen werden. Zur Zeit ist es so implementiert,
   dass der Images-Ordner bereits im bin-Verzeichnis vorhanden war. Ein Build
   in Eclipse hat diesen allerdings gelöscht. o.O

 - Die Berechnungen der Grafiken sollten während des Imports/Öffnens bzw. als
   Folge des Imports geschehen, das entlastet die CPU beim Scrollen und der
   Scrollvorgang sollte schneller ablaufen.

 - Die JSpinner zum "scrollen" der Kurve sollten möglichst durch richtige
   Scrollbalken ersetzt werden.

 - org.wedabecha.ui.dialogs.definiereDatumUI
		Die Möglichkeit hier ein Datum einzugeben existiert zwar, ist aber evtl.
		nicht die beste Methode um das zu realisieren. Eventuell gibt es Klassen,
		die soetwas schon besser können (GTK und Qt bringen hierfür ja
		beispielsweise Felder mit)
		Das eingegebene Datum müsste an sich auch auf Korrektheit überprüft werden,
		so dass es beispielsweise nicht möglich ist, den 30. Februar einzutragen ;)

 - org.wedabecha.system.draw.ShareCurve.java
		zeichneKurve:
			Aktienkurve
			DARSTELLUNG von Wochen-,Monats- und Jahresmitteln
			Zeitachse zoombar
			Veränderung des Maßstabs der Achsen

 - Kalenderfunktion und konkrete Datumsbeschriftung der Zeitachse
   (Beschriftungen der x-Achse auf Tages-, Monats-, Jahresbasis)

 - Hilfe, Dokumentation, Kurzanleitung
 - für die Verarbeitung von CSV-Dateien lässt sich darüber nachdenken, diese
   Bibliothek zu benutzen: http://supercsv.sourceforge.net/

###############################################################################

Eventuell ist das JerichoHTML-Projekt irgendwann in einer nächsten Version
nützlich für wedabecha.

see http://jerichohtml.sourceforge.net/doc/index.html

###############################################################################

QUALITÄTSMANAGEMENT:
Grösse, Breite, Titel der Fenster im "Standard"-Bereich der pack()-Methoden
durchgehen, und ggf. ändern.
Die ganzen Texte auf Rechtschreibung und Umlaute durchsehen und Umlaute ala
ae, oe, usw. durch die entsprechende Unicode-Escape-Sequenz ersetzen...

###############################################################################

BUG:
exportiereGrafik.java:43 -> wirft unter Linux eine
Exception in thread "AWT-EventQueue-0" java.lang.ClassCastException:
sun.awt.image.DataBufferNative

Funktioniert auf einer Win32-Maschine aber ohne Probleme, scheinbar unabhängig
von der Java-Version

##############################################################################

WÜNSCHE :

 - Druckfunktion direkt aus dem Softwareprodukt heraus
 - logarithmische Darstellung der Einteilung der y-Achse
   gleitende Mittelwerte
 - Kombination mehrerer Eingabedateien zu einer einzigen
   Sicherheitsabfrage, falls eingelesene Daten identisch sind
 - Zoom durch markieren des Bereichs mit der Maus
 - Einlesen von  Daten direkt aus einer Internetseite und Speicherung dieser
   Daten im CSV - Format
 - Proportionales vergrössern des HauptFensters
 - Tooltips und Statusleiste
 - Menupunkt [Hilfe]->[Lizenz] ?
 - Menupunkt [Annotation]
 	-> Pfeil zeichnen
 	-> Linie zeichnen
 	-> Text einfügen

##############################################################################

WUNSCHKRITERIUM:
Speicherfunktion
ganzes Objekt mit darstellungsTyp und Linienart als Objekt
mit serialize (?) abspeichern als .weda-Datei
